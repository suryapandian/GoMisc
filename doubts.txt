1. Screenshot doubt
2. Sprint - what does it do?
3.  z -= (z*z - x) / (2*z)
looping this, how does it give square root...
(z*z - x) I get
ans: https://en.wikipedia.org/wiki/Newton%27s_method
4. runtime - what does this package go?
5. what does defer in go do?
https://blog.golang.org/defer-panic-and-recover
6. what is pointer arithmatic?
7. for web servers will we need pointers?
8. Difference between len and cap for slice?

package main

import "fmt"

func main() {
s := []int{2, 3, 5, 7, 11, 13}
printSlice(s)
s = s[2:]
printSlice(s)
}
func printSlice(s []int) {
fmt.Printf("len=%d cap=%d %v\n", len(s), cap(s), s)
}

9. Application of slice?
10. Why does go has arrays with static length unlike ruby which is so sweet.



1. defer examples
2. slice blogs
3. thread pool manager -
4. go reflection

println
printf - %
print -

start pointer to that array, ending point of the array, ending point of the slice


